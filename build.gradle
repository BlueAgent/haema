plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
    id "org.jetbrains.kotlin.jvm"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

repositories {
    mavenLocal()
    maven {
        name = "FabricMC"
        url = "http://maven.fabricmc.net/"
    }
   maven {
        name = "Sonatype"
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        name = "Jamies"
        url "https://maven.jamieswhiteshirt.com/libs-release/"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
    maven {
        name = "Jared"
        url 'https://maven.blamejared.com'
        content {
            includeGroup "vazkii.patchouli"
        }
    }
    maven {
        name = "Ladysnake Libs"
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
        content {
            includeGroup "io.github.ladysnake"
        }
    }
    maven {
        name = "TheIllusiveC4"
        url = "https://maven.theillusivec4.top"
        content {
            includeGroup "top.theillusivec4.somnus"
        }
    }
    maven {
        name = "GeckoLib"
        url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
        content {
            includeGroup "software.bernie.geckolib"
        }
    }
    maven {
        name = "Cotton"
        url = "https://server.bbkr.space/artifactory/libs-release/"
        content {
            includeGroup "io.github.cottonmc"
        }
    }
    maven {
        name = "Shedaniel"
        url = "https://maven.shedaniel.me"
        content {
            includeGroupByRegex "me\\.shedaniel.*"
            includeGroupByRegex "me\\.sargunvohra.*"
        }
    }
    maven {
        name = 'TerraformersMC Archive'
        url = 'https://raw.githubusercontent.com/TerraformersMC/Archive/main/releases/'
        content {
            includeGroup "io.github.prospector"
            includeGroup "com.terraformersmc"
        }
    }
    maven {
        name = "CurseMaven"
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Flemmli97"
        url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
        content {
            includeGroup "io.github.flemmli97"
        }
    }
    maven {
        name = "JitPack"
        url 'https://jitpack.io'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    ///
    /// HARD DEPS
    ///

    // Fabric API
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}") {
        exclude module: "fabric-dimensions-v1"
        exclude module: "fabric-biomes-v1"
    }

    // Fabric Language Kotlin
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

    ///
    /// INCLUDED
    ///

    // Satin
    modImplementation "io.github.ladysnake:Satin:${project.satin_version}"
    include "io.github.ladysnake:Satin:${project.satin_version}"

    // Reach Entity Attributes
    modImplementation "com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}"
    include "com.jamieswhiteshirt:reach-entity-attributes:${project.rea_version}"

    // Patchouli
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    include "vazkii.patchouli:Patchouli:${project.patchouli_version}"

    // AutoConfig 1u
    modApi("me.sargunvohra.mcmods:autoconfig1u:${project.acu_version}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    include "me.sargunvohra.mcmods:autoconfig1u:${project.acu_version}"

    // CCA
    modApi "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    include "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-base:${project.cc_version}"
    modImplementation "io.github.onyxstudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"
    include "io.github.OnyxStudios.Cardinal-Components-API:cardinal-components-entity:${project.cc_version}"

    // Somnus
    modImplementation "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"
    include "top.theillusivec4.somnus:somnus-fabric:${project.somnus_version}"

    // LibCD
    include "io.github.cottonmc:LibCD:${project.libcd_version}"
    modRuntime "io.github.cottonmc:LibCD:${project.libcd_version}"

    // Fabric Permissions API
    modImplementation "me.lucko:fabric-permissions-api:${project.fpa_version}"
    include "me.lucko:fabric-permissions-api:${project.fpa_version}"

    ///
    /// SOFT DEPS
    ///

    // REI
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"

    // Origins
    modImplementation("com.github.apace100:origins-fabric:${project.origins_version}") {
        exclude module: "modmenu"
        exclude group: "io.github.OnyxStudios.Cardinal-Components-API"
    }

    // Rat's Mischief
    modCompileOnly "io.github.ladysnake:rats-mischief:${project.rats_version}"
    modCompileOnly "software.bernie.geckolib:geckolib-fabric-1.16.5:${project.geckolib_version}:dev"

    // Bewitchment
    modCompileOnly "curse.maven:bewitchment-394915:${project.bewitchment_version}"

    // Flan
    modImplementation "io.github.flemmli97:flan:${project.flan_version}"

    // ModMenu
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
    }
}

compileKotlin.kotlinOptions.jvmTarget = "1.8"

/**
 * https://dev.to/williambl/mixins-kotlin-and-default-methods-why-they-don-t-work-together-417d
 */
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        freeCompilerArgs += '-Xjvm-default=all'
    }
}
